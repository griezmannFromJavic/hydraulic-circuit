(define (dfs-init graph initial-node)
	(define (neighbours node) (cadr (assoc node adjacency-list-undirected)))
	(define (dfs parent child tree visited)
		(define (unvisited-neighbours node) (set-difference (neighbours node) visited)) ; ovo treba izbacit pod let funkcije dfs init (odma ispod definicije (neighbours node)
		(define new-tree (cons (list parent child) tree))
		(define new-visited (cons parent visited))
		(if (null? (unvisited-neighbours parent))
			(reverse new-tree)
			(begin
				(set! visited (cons parent visited))
				(display "visited: ")
				(display visited) (newline) (newline)		
				(display "unvisited neighbours: ")
				(display (unvisited-neighbours parent)) (newline) (newline)
				(display "tree: ")
				(display tree) (newline) (newline)
				(display "-----------------------------------") (newline) (newline)

			(map (lambda (x) (dfs child x new-tree new-visited)) (unvisited-neighbours child))
			)))
	(dfs initial-node (car (neighbours initial-node)) '() '())
	)
