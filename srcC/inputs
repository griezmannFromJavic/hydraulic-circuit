# pythonic '#' comment is used


# nodes must posses integer name
# one link is defined as follows:
# link name: inlet node -> outlet node
# [x1, y1], [x2, y2] ...

# order is important, CONSTANT PRESSURE stops the LINKS parser

# the simplest way to ensure a passive element is adding the point [0.0, 0.0]

LINKS

link8: 1 -> 3
[0.0, 0.0], [1.7, 2.3] # this link contains (the minimum of) two interpolation points (a line)

link5: 1 -> 4 # example of an overdetermined charachteristic with runge phenomena
[0.0, 0.0], [1.7, 2.3], [2.5, 2.7], # multiline interpolation points are possible
[3.0, 2.5], [4.3, 2.3], [5.5, 0.7]  # but every-but-last line must end with comma

link9: 2 -> 3
[0.0, 0.0], [1.0, 1.0] [2.0, 4.0] # q=p^2, redundant [3.0, 9.0] may be added without error

link11: 3 -> 5 # example of an odd x^3 function and unsorted x values
[0.0, 0.0], [-1.0, -1.0], [1.0, 1.0], [2.0, 8.0]

link6: 4 -> 5
[0.0, 0.0], [1.0, 1.0]

link7: 2 -> 5 # example of an active element (pump or battery)
[0.0, 2.0], [1.0, 1.0], [2.0, -2.0]

link10: 3 -> 4 # int type input should be read as float
[0, 0] [1, 1] [3, 9]



NODE CONDITIONS
    P(1) = -5000.0 # node 1 with known pressure
    P(2) = -8000.0
    S(4) = 100.0 # known inflow at node 4
    S(5) = -200.0 # known sink at node 5




# constant inflow can be modeled by adding a link whose flow function is constant for all dp
# same goes for flow source depending on pressure.
